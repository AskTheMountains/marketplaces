# Файл с настройками и номером клиента
from options import settings, client_number

# ID клиента и АПИ-ключ для заголовков запросов к Seller API
api_key = settings['api_key_wb'][client_number]

# Заголовки запросов к API
headers = {
"Authorization": api_key,
"Content-Type": "application/json",
}

# Наименование директории для МП WB
marketplace_dir_name = 'wb'

# Имя клиента
client_name = settings['client_name'][client_number]

# Тип магазина
# shop_type = settings['shop_type'][client_number]
shop_type = ''
if client_name in ['SENS', 'SENS_IP']:
    shop_type = 'clothes'
elif client_name in ['Orsk_Combinat']:
    shop_type = 'food'
elif client_name in ['Neva_Metall']:
    shop_type = 'dishes'

# Тип коробов
# cargo_type = settings['cargo_type'][client_number]
cargo_type = 'boxes'
if client_name in ['SENS', 'SENS_IP', 'Orsk_Combinat', 'Neva_Metall']:
    cargo_type = 'boxes'

# Признак того, что клиент возит крупногабаритный товар
# is_heavy_cargo = settings['heavy_cargo'][client_number]
is_heavy_cargo = False
if client_name in ['SENS', 'SENS_IP', 'Orsk_Combinat', 'Neva_Metall']:
    is_heavy_cargo = False


# Объединение нескольких кластеров в один
# Объединение кластеров для отдельных клиентов
if client_name in ['KU_And_KU', 'Soyuz']:
    clusters_mapping = {"cluster": ['Астана', 'Казань', 'Коледино', 'Краснодар (Тихорецкая)', 'Электросталь'],
                        "subcluster": [
                            ['Астана Карагандинское шоссе', 'Атакент'],
                            ['Барнаул СЦ 2', 'Екатеринбург', 'Новосибирск', 'СЦ Ижевск 2', 'Хабаровск СЦ', 'Ярославль'],
                            ['Алексин', 'Белая Дача', 'Подольск', 'Рязанская обл.', 'Чехов', 'Белые Столбы', 'Вёшки', 'Котовск', 'Пушкино', 'Радумля 1', 'Санкт-Петербург', 'СЦ Шушары Московское шоссе 143'],
                            ['Краснодар', 'Крыловская', 'Невинномысск'],
                            ['Владимир', 'Иваново', 'Обухово', 'Череповец', 'Вологда']
                            ]}
# else:
# Кластеры без объединения
clusters_mapping = {"cluster": [], "subcluster" : []}

# Игнорирование виртаульных складов при расчете метрик
if client_name in ['']:
    ignore_virtual_warehouses = False
else:
    ignore_virtual_warehouses = True

# Столбцы, которые берем из каталога для расчета поставок
if client_name in ['SENS', 'SENS_IP', 'Orsk_Combinat','TRIBE']:
    catalog_supply_columns = ['Артикул_Размер', 'РРЦ', 'Статус']
if client_name in ['Neva_Metall']:
    catalog_supply_columns = ['Артикул_Размер', 'РРЦ', 'Статус']


if client_name in ['KU_And_KU', 'Soyuz']:
    catalog_supply_columns = [
        'Артикул_Размер', 'РРЦ',
        'Продается по FBO', 'Статус',
        'План', 'Союз'
    ]


# Столбцы, которые должны быть в файле расчета поставок на листе "Всего"
if client_name in ['SENS', 'SENS_IP']:
    svod_total_columns = [
        '№ товара', 'Артикул_Размер', 'Артикул продавца', 'Размер', 'Наименование товара', 'Предмет',  'Штрихкод', 'РРЦ',
        'Заказы', 'Продажи', 'Остатки', 'Остатки_fbs',
        'Оборачиваемость',
        'Потребность на 40 дней', 'Потребность на 60 дней',
        'Дефицит/Избыток 40 дней','Дефицит/Избыток 40 дней с учетом FBS',
        'Дефицит/Избыток 60 дней',
        'Потребность на 40 дней (округл.)', 'Потребность на 40 дней с учетом FBS (округл.)',
        'Потребность на 60 дней (округл.)'
    ]
if client_name in ['Orsk_Combinat']:
    svod_total_columns = [
        '№ товара', 'Артикул_Размер', 'Артикул продавца', 'Размер', 'Наименование товара', 'Предмет', 'Штрихкод',
        'Статус',
        'Заказы', 'Продажи', 'Остатки', 'Остатки_fbs',
        'Оборачиваемость',
        'Потребность на 40 дней', 'Потребность на 60 дней',
        'Дефицит/Избыток 40 дней','Дефицит/Избыток 40 дней с учетом FBS',
        'Дефицит/Избыток 60 дней',
        'Потребность на 40 дней (округл.)', 'Потребность на 40 дней с учетом FBS (округл.)',
        'Потребность на 60 дней (округл.)'
    ]
if client_name in ['Neva_Metall']:
    svod_total_columns = [
        '№ товара', 'Артикул_Размер', 'Артикул продавца', 'Размер', 'Наименование товара', 'Предмет', 'Штрихкод',
        'РРЦ', 'Статус',
        'Заказы', 'Продажи', 'Остатки', 'Остатки_fbs',
        'Оборачиваемость',
        'Потребность на 40 дней', 'Потребность на 60 дней',
        'Дефицит/Избыток 40 дней','Дефицит/Избыток 40 дней с учетом FBS',
        'Дефицит/Избыток 60 дней',
        'Потребность на 40 дней (округл.)', 'Потребность на 40 дней с учетом FBS (округл.)',
        'Потребность на 60 дней (округл.)'
    ]
# if client_name in ['TRIBE']:
#     svod_total_columns = ['№ товара', 'Артикул_Размер', 'Артикул продавца', 'Размер', 'Наименование товара', 'Предмет',  'Штрихкод', 'РРЦ',
#                           'Заказы', 'Продажи', 'Остатки', 'Остатки_fbs',
#                           'Оборачиваемость',
#                           'Потребность на 40 дней', 'Потребность на 60 дней',
#                           'Дефицит/Избыток 40 дней','Дефицит/Избыток 40 дней с учетом FBS',
#                           'Дефицит/Избыток 60 дней',
#                           'Потребность на 40 дней (округл.)', 'Потребность на 40 дней с учетом FBS (округл.)',
#                           'Потребность на 60 дней (округл.)'
#                           ]

# if client_name in ['KU_And_KU', 'Soyuz']:
#     svod_total_columns = ['№ товара', 'Артикул_Размер', 'Артикул продавца', 'Размер', 'Наименование товара', 'Предмет', 'Штрихкод',
#                           'Продается по FBO', 'Статус',
#                           'План', 'Союз', 'РРЦ',
#                           'Заказы', 'Продажи', 'Остатки', 'Остатки_fbs',
#                           'Оборачиваемость',
#                           'Потребность на 40 дней', 'Потребность на 60 дней',
#                           'Дефицит/Избыток 40 дней','Дефицит/Избыток 40 дней с учетом FBS',
#                           'Дефицит/Избыток 60 дней',
#                           'Потребность на 40 дней (округл.)', 'Потребность на 40 дней с учетом FBS (округл.)',
#                           'Потребность на 60 дней (округл.)'
#                           ]


# Колонки, которые должны быть в итоговом файле на листе "По кластерам"
if client_name in ['SENS', 'SENS_IP']:
    svod_clusters_columns = [
        '№ товара', 'Артикул_Размер', 'Артикул продавца', 'Размер',
        'Предмет', 'Наименование товара', 'Штрихкод', 'РРЦ', 'Склад',
        'Заказы', 'Продажи', 'Остатки',
        'Оборачиваемость',
        'Потребность на 40 дней', 'Дефицит/Избыток 40 дней', 'Потребность на 40 дней (округл.)',
        'Потребность на 60 дней', 'Дефицит/Избыток 60 дней', 'Потребность на 60 дней (округл.)',
        'Корректировка с учетом нулевых остатков'
    ]
if client_name in ['Orsk_Combinat']:
    svod_clusters_columns = [
        '№ товара', 'Артикул_Размер', 'Артикул продавца', 'Размер',
        'Предмет', 'Наименование товара', 'Штрихкод', 'Статус', 'Склад',
        'Заказы', 'Продажи', 'Остатки',
        'Оборачиваемость',
        'Потребность на 40 дней', 'Дефицит/Избыток 40 дней', 'Потребность на 40 дней (округл.)',
        'Потребность на 60 дней', 'Дефицит/Избыток 60 дней', 'Потребность на 60 дней (округл.)',
        'Корректировка с учетом нулевых остатков'
    ]
if client_name in ['Neva_Metall']:
    svod_clusters_columns = [
        '№ товара', 'Артикул_Размер', 'Артикул продавца', 'Размер',
        'Предмет', 'Наименование товара', 'Штрихкод', 'РРЦ', 'Статус', 'Склад',
        'Заказы', 'Продажи', 'Остатки',
        'Оборачиваемость',
        'Потребность на 40 дней', 'Дефицит/Избыток 40 дней', 'Потребность на 40 дней (округл.)',
        'Потребность на 60 дней', 'Дефицит/Избыток 60 дней', 'Потребность на 60 дней (округл.)',
        'Корректировка с учетом нулевых остатков'
    ]
# if client_name in ['TRIBE']:
#     svod_clusters_columns = [
#         '№ товара', 'Артикул_Размер', 'Артикул продавца', 'Размер',
#         'Предмет', 'Наименование товара', 'Штрихкод', 'РРЦ', 'Склад',
#         'Заказы', 'Продажи', 'Остатки',
#         'Оборачиваемость',
#         'Потребность на 40 дней', 'Дефицит/Избыток 40 дней', 'Потребность на 40 дней (округл.)',
#         'Потребность на 60 дней', 'Дефицит/Избыток 60 дней', 'Потребность на 60 дней (округл.)',
#         'Корректировка с учетом нулевых остатков'
#     ]
# if client_name in ['KU_And_KU', 'Soyuz']:
#     svod_clusters_columns = [
#         '№ товара', 'Артикул_Размер', 'Артикул продавца', 'Размер',
#         'Предмет', 'Наименование товара', 'Штрихкод',
#         'Продается по FBO', 'Статус',
#         'План', 'Союз', 'РРЦ',
#         'Склад',
#         'Заказы', 'Продажи', 'Остатки',
#         'Оборачиваемость',
#         'Потребность на 40 дней', 'Дефицит/Избыток 40 дней', 'Потребность на 40 дней (округл.)',
#         'Потребность на 60 дней', 'Дефицит/Избыток 60 дней', 'Потребность на 60 дней (округл.)',
#         'Корректировка с учетом нулевых остатков'
#     ]

# Коэффициент себестоимости для акций
if client_name in ['KU_And_KU', 'Soyuz']:
    net_cost_koef = 0.4
else:
    net_cost_koef = 0.4

# Колонки, которые берем из справочной таблицы для свода по акциям
if client_name in ['SENS', 'SENS_IP', 'TRIBE', 'Orsk_Combinat']:
    catalog_action_columns = [
        'Артикул продавца',
        'Размер',
        'Статус',
        'Минимальная цена расчетная, руб.',
        'РРЦ',
        'Себестоимость'
    ]
if client_name in ['Neva_Metall']:
    catalog_action_columns = [
        'Артикул продавца',
        'Размер',
        'Статус',
        'Минимальная цена расчетная, руб.',
        'РРЦ',
        'Себестоимость'
    ]

# if client_name in ['KU_And_KU', 'Soyuz']:
#     catalog_action_columns = [
#         'Артикул продавца', 'Размер',
#         'Продается по FBO', 'Статус',
#         'План', 'Союз', 'РРЦ', 'Минимальная цена расчетная, руб.',
#         'Себестоимость'
#     ]

# Нужные колонки для свода по акциям
if client_name in ['SENS','SENS_IP',]:
    svod_actions_cols = [
        'Артикул продавца', 'Предмет', 'Наименование товара', 'Статус', 'Баркод', 'Размер', 'Цвет',
        'РРЦ', 'Цена до скидки', 'Цена после скидки', 'Скидка до РРЦ', 'Минимальная цена маржинальная, руб.',
        'Себестоимость',
        'Скидка WB',
        'Остатки', 'Остатки_fbs', 'Заказы', 'Продажи',
        'Ожидаемое количество на складе'
    ]
if client_name in ['Orsk_Combinat']:
    svod_actions_cols = [
        'Артикул продавца', 'Предмет', 'Наименование товара', 'Баркод', 'Статус',
        'РРЦ', 'Цена до скидки', 'Цена после скидки', 'Скидка до РРЦ', 'Минимальная цена маржинальная, руб.',
        'Себестоимость',
        'Скидка WB',
        'Остатки', 'Остатки_fbs', 'Заказы', 'Продажи',
        'Ожидаемое количество на складе'
    ]
if client_name in ['Neva_Metall']:
    svod_actions_cols = [
        'Артикул продавца', 'Предмет', 'Наименование товара', 'Баркод', 'Статус',
        'РРЦ', 'Цена до скидки', 'Цена после скидки', 'Скидка до РРЦ', 'Минимальная цена маржинальная, руб.',
        'Себестоимость',
        'Скидка WB',
        'Остатки', 'Остатки_fbs', 'Заказы', 'Продажи',
        'Ожидаемое количество на складе'
    ]
# if client_name in ['TRIBE']:
#     svod_actions_cols = [
#         'Артикул продавца', 'Предмет', 'Наименование товара', 'Баркод', 'Цвет',
#         'РРЦ', 'Цена до скидки', 'Цена после скидки', 'Скидка до РРЦ', 'Минимальная цена маржинальная, руб.',
#         'Себестоимость',
#         'Скидка WB',
#         'Остатки', 'Остатки_fbs', 'Заказы', 'Продажи',
#         'Ожидаемое количество на складе'
#     ]

# if client_name in ['KU_And_KU', 'Soyuz']:
#     svod_actions_cols = [
#         'Артикул продавца', 'Предмет', 'Наименование товара', 'Баркод', 'Размер', 'Цвет',
#         'РРЦ', 'Цена до скидки', 'Цена после скидки', 'Скидка до РРЦ', 'Минимальная цена маржинальная, руб.',
#         'Себестоимость',
#         'Скидка WB',
#         'Остатки', 'Остатки_fbs', 'Заказы', 'Продажи',
#         'Ожидаемое количество на складе'
#     ]

# Колонка, по которой считаем продажи и возвраты в рублях в отчете реализации
if client_name in ['Orsk_Combinat', 'Neva_Metall']:
    finance_report_price_column = 'Цена розничная с учетом согласованной скидки'
else:
    finance_report_price_column = 'Сумма продаж (возвратов)'

# Нужные колонки для свода по фин. отчету
if client_name in ['SENS', 'SENS_IP', 'TRIBE']:
    catalog_finace_svod_columns = ['Артикул поставщика', 'Основной артикул', 'Себестоимость', 'Цвет', 'Сезон', 'Статус']
if client_name in ['IP_Yushkova', 'Orsk_Combinat']:
    catalog_finace_svod_columns = ['Артикул продавца', 'Размер', 'Себестоимость']
if client_name in ['Neva_Metall']:
    catalog_finace_svod_columns = ['Артикул продавца', 'Размер', 'Себестоимость']

# ID Рекламных кампаний для отчета РК
if client_name == 'Orsk_Combinat':
    promotion_companies = [
        [27510438],
        [27163894],
        [23402839],
        [27510444],
        [27361337],
        [22686786],
        [27513567],
        [27361332],
        [27218787],
        [27098220],
        [23502219],
        [27605462],
        [24201562],
        [22710455],
        [27605430],
        [27519179],
    ]
elif client_name == 'Neva_Metall':
    promotion_companies = [
        [26532864],
        [26124451],
        [26294575],
        [26294575],
    ]
# if client_name in ['TRIBE']:
#     catalog_finace_svod_columns = ['Артикул продавца', 'Размер', 'Себестоимость', 'Статус']
# if client_name in ['KU_And_KU', 'Soyuz']:
#     catalog_finace_svod_columns = ['Артикул WB', 'Артикул поставщика', 'Размер', 'Наименование товара', 'Категория', 'Статус', 'Продается по FBO', 'РРЦ', 'Себестоимость']
